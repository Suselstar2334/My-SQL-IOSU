CREATE TABLE Posts(Posts_key INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE),
                   Name_post VARCHAR2(20) NOT NULL,
                   Salary NUMBER(6,2) NOT NULL,
                   PRIMARY KEY(Posts_key)
                   );

CREATE TABLE Staff(Staff_key INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE),
                  Second_name VARCHAR2(20) NOT NULL, 
                  First_name VARCHAR2(20) NOT NULL,
                  Middle_name VARCHAR2(20) NOT NULL,
                  Birth_date DATE NOT NULL,
                  Registration VARCHAR2(40) NOT NULL,
                  Telephone_number CHAR(17) NOT NULL,
                  Education VARCHAR2(20) NOT NULL,
                  Sex VARCHAR2(20) NOT NULL,
                  PRIMARY KEY(staff_key),
                  CONSTRAINT Education_constraint
                             CHECK (Education IN('Higher education')),
                  CONSTRAINT Telephone_number_unique
                            unique(Telephone_number),
                  CONSTRAINT Telephone_number_constraint
                             CHECK(REGEXP_LIKE(Telephone_number, '^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$')),
                  CONSTRAINT Sex_constraint
                               CHECK(Sex IN('M','W'))
                  );                   

CREATE TABLE Departments(Department_key INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE),
                         Name_department VARCHAR2(20) NOT NULL,
                         Number_persons VARCHAR2(20) NOT NULL,
                         Head_department VARCHAR2(20) NOT NULL,
                         PRIMARY KEY(department_key),
                         CONSTRAINT Number_persons_constraint
                                    CHECK(Number_persons <= 5)
                        );

CREATE TABLE NIR(NIR_key INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE),
                 Department_key INTEGER,
                 Development VARCHAR2(20) NOT NULL,
                 PRIMARY KEY(NIR_key),
                 CONSTRAINT Department_key_const
                            FOREIGN KEY(Department_key)
                            REFERENCES Departments
                 );

CREATE TABLE Staffing_table(Staffing_table_key INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE),
                            Staff_key INTEGER,
                            Posts_key INTEGER,
                            NIR_key INTEGER,
                            Beginning_date DATE,
                            Term_of_work INTEGER,
                            PRIMARY KEY(Staffing_table_key),
                            CONSTRAINT Staff_key_in_timetable
                                        FOREIGN KEY(Staff_key)
                                        REFERENCES Staff,
                            CONSTRAINT Posts_key_in_timetable
                                        FOREIGN KEY(Posts_key)
                                        REFERENCES Posts,
                            CONSTRAINT NIR_key_in_timetable
                                        FOREIGN KEY(NIR_key)
                                        REFERENCES NIR
                            );



CREATE SYNONYM Personnel for Staff;
CREATE SYNONYM Position for Posts;
CREATE SYNONYM Branch for Departments;


insert into Posts values ('1', 'leader', '3000.00');
insert into Posts values ('2', 'Senior Researcher', '1500.00');
insert into Posts values ('3', 'junior researcher', '900.00');


insert into Staff values ('1', 'Sergeev', 'Vlad', 'Alexandrovich', '04/02/1997', 'Lesnoy 41, 48', '+375(29)279-94-27', 'Higher education', 'M');
insert into Staff values ('2', 'Petrenko', 'Ivan', 'Nicolaevich', '10/20/1990', 'Minsk city, Bogdanivicha 55,332', '+375(29)574-93-21', 'Higher education', 'M');
insert into Staff values ('3', 'Dubovec', 'Ilya', 'Sergeevich', '09/09/1997', 'Minsk city, Masherova 48,46', '+375(12)412-41-25', 'Higher education', 'M');
insert into Staff values ('4', 'Kalinkovich', 'Marya', 'Victorovna', '07/11/1991', 'Minsk city, Shorsa 56,63', '+375(29)322-45-17', 'Higher education', 'W');
insert into Staff values ('5', 'Strykalo', 'Yana', 'Alexandrovna', '04/02/1987', 'Grodno city, Kolosa 4,26', '+375(29)512-66-74', 'Higher education', 'W');
insert into Staff values ('6', 'Prokopenya', 'Artem', 'Vlademirivochin', '01/05/1990', 'Minsk city, Kazinca 124,31', '+375(33)122-40-20', 'Higher education', 'M');
insert into Staff values ('7', 'Markov', 'Alexandr', 'Vladimirovich', '12/06/1995', 'Minsk city, Timiryaziva 24,6', '+375(33)123-21-22', 'Higher education', 'M');
insert into Staff values ('8', 'Pesetski', 'Alexey', 'Vaxtangovich', '01/12/1988', 'Vitebsk city, Masherova 56,156', '+375(29)506-27-95', 'Higher education', 'M');
insert into Staff values ('9', 'Kotcovich', 'Daniil', 'Vladislav', '10/16/1994', 'Minsk city, Masherova 56,123', '+375(29)512-11-22', 'Higher education', 'M');
insert into Staff values ('10', 'Krinkova', 'Olga', 'Vladimirovna', '04/21/1982', 'Minsk city, Gikalo 24,20', '+375(29)332-88-64', 'Higher education', 'W');
insert into Staff values ('11', 'Goremykin', 'Alexey', 'Alexandrovich', '08/14/1995', 'Minsk city, Pyatrucia Brovki 3,11', '+375(29)145-12-21', 'Higher education', 'M');
insert into Staff values ('12', 'Utkin', 'Alexey', 'Alexandrovich', '06/29/1989', 'Mogilev city, Pobedi 45,46', '+375(17)331-41-21', 'Higher education', 'M');
insert into Staff values ('13', 'Dyagilev', 'Vadim', 'Nicolaevich', '10/10/1996', 'Minsk city, Nezavisimosti 154,32', '+375(33)603-87-91', 'Higher education', 'M');
insert into Staff values ('14', 'Valckovich', 'Stasik', 'Vladimirovich', '05/09/1994', 'Minsk city, Bogdanivicha 53,114', '+375(17)232-41-15', 'Higher education', 'M');
insert into Staff values ('15', 'Sanders', 'Devid', 'Dmytrievich', '05/01/1995', 'Minsk city, Masherova 49,46', '+375(29)312-57-98', 'Higher education', 'M');
insert into Staff values ('16', 'Ivanov', 'Ivan', 'Ivanovich', '10/05/1993', 'Minsk city, Masherova 50,50', '+375(29)422-27-38', 'Higher education', 'M');
insert into Staff values ('17', 'Vovin', 'Vova', 'Vladimirovich', '07/06/1995', 'Minsk city, Bogdanivicha 153,30', '+375(29)444-17-24', 'Higher education', 'M');

insert into Departments values('1', 'Tranzistor', '5', 'Sergeev');
insert into Departments values('2', 'Rezistor', '2', 'Prokopenya');
insert into Departments values('3', 'Diod', '3', 'Pesetski');
insert into Departments values('4', 'Condensator', '2', 'Goremykin');
insert into Departments values('5', 'Transformator', '3', 'Dyagilev');
insert into Departments values('6', 'Tiristor', '1', 'Ivanov');

insert into NIR values('1', '1', 'Bipolar tranzistor');
insert into NIR values('2', '2', 'Rezistor 15kOm');
insert into NIR values('3', '3', 'Diod shotki');
insert into NIR values('4', '4', 'Condensator 2200mkF');
insert into NIR values('5', '5', 'Low Transformator');


insert into Staffing_table values('1', '1', '1', '1', '01/01/2020', '40');
insert into Staffing_table values('2', '2', '2', '1', '01/01/2020', '40');
insert into Staffing_table values('3', '3', '2', '1', '01/01/2020', '40');
insert into Staffing_table values('4', '4', '2', '1', '01/01/2020', '40');
insert into Staffing_table values('5', '5', '3', '1', '01/01/2020', '40');
insert into Staffing_table values('6', '6', '1', '2', '02/10/2020', '30');
insert into Staffing_table values('7', '7', '2', '2', '02/10/2020', '30');
insert into Staffing_table values('8', '8', '1', '3', '03/20/2020', '45');
insert into Staffing_table values('9', '9', '2', '3', '03/20/2020', '45');
insert into Staffing_table values('10', '10', '3', '3', '03/20/2020', '45');
insert into Staffing_table values('11', '11', '1', '4', '04/30/2020', '60');
insert into Staffing_table values('12', '12', '2', '4', '04/30/2020', '60');
insert into Staffing_table values('13', '13', '1', '5', '12/30/2020', '50');
insert into Staffing_table values('14', '14', '2', '5', '12/30/2020', '50');
insert into Staffing_table values('15', '15', '2', '5', '12/30/2020', '50');


--ЗАПРОСЫ 
--Вариант 19. 
-- 1 Вывести всех сотрудников в отделе Транзистор
select Second_name "Фамилия", First_name "Имя", Middle_name "Отчество", B.Name_department "Отдел"
from Staff S, Departments B, Staffing_table D,NIR N
where B.Department_key = N.Department_key and N.NIR_key = D.NIR_key and S.Staff_key = D.Staff_key and B.Name_department = 'Tranzistor' 



-- 2 «Выплаченная заработная плата (по отделам)» (итоговый запрос);
select B.Name_department "Отдел", Sum(S.Salary) "Итого"
from Posts S, Departments B, Staffing_table D, NIR N
where S.Posts_key = D.Posts_key and N.NIR_key = D.NIR_key and B.Department_key = N.Department_key
group by B.Name_department



--3 «Список ответственных по научно-исследовательским разработкам» (параметрический запрос);
select Second_name "Фамилия", First_name "Имя", Middle_name "Отчество", B.Name_post "Должность", N.Development "Разработка"
from Staff S, Posts B, Staffing_table D, NIR N
where B.Posts_key = D.Posts_key and N.NIR_key = D.NIR_key and S.Staff_key  = D.Staff_key and B.Name_post = 'leader' and N.Development = :Enter_NIR  


 --4 «Общий список разработок и сотрудников c общим количеством записей в штатном расписании» (запрос на объединение); 
select Second_name || '  ' || First_name || '  ' || Middle_name || ' - Работник' "ФИО", Count(D.Staffing_table_key)"Количество записей в штатном расписании"
from Staff S, Staffing_table D 
where S.Staff_key  = D.Staff_key
group by  Second_name || '  ' || First_name || '  ' || Middle_name || ' - Работник'
UNION 
select B.Development || ' - Разработка', Count(D.Staffing_table_key)
from NIR B, Staffing_table D 
where B.NIR_key  = D.Staff_key
group by B.Development || ' - Разработка'



 --5 Количество завершенных научных работ по месяцам (выво-дить название месяца)» (запрос по полю с типом дата).
select To_char(Beginning_date + Term_of_work, 'Month') "Месяц выполнения работ", Count(Staffing_table_key) "Количество выполненных работ"
from Staffing_table
group by To_char(Beginning_date + Term_of_work, 'Month')


-- 6 Список сотрудников с датой начала и окончания работ
select Second_name || '  ' || First_name  || '  ' || Middle_name "ФИО", Beginning_date "Дата начала работ", Beginning_date + Term_of_work "Дата выполнения работ"
from Staff join Staffing_table using(Staff_key)



--7 Информация об отделах и ведущихся разработках//////// left и full
select Name_department, Number_persons, Head_department, Development
from Departments full join NIR using(Department_key)



---------------------8 Дата окончания работ по разработке биполярного транзистора
select Second_name || '  ' || First_name  || '  ' || Middle_name "ФИО", Beginning_date + Term_of_work "Дата выполнения работ"
from Staff join Staffing_table using(Staff_key)
where NIR_key IN(select NIR_key
                        from NIR
                        where Development = 'Bipolar tranzistor')




-----9 Список Старших научных сотрудников которые младше любого из Руководителей
select S.Second_name || '  ' || S.First_name  || '  ' || S.Middle_name "ФИО", B.Name_post "Должность", S.Birth_date "Дата рождения"
from Staff S, Posts B, Staffing_table D, NIR N
where B.Posts_key = D.Posts_key and N.NIR_key = D.NIR_key and S.Staff_key  = D.Staff_key and B.Name_post IN('Senior Researcher')  and to_char(Birth_date, 'yyyy') <= any(select to_char(Birth_date, 'yyyy')
                                                                                                                              from Staff S, Posts B, Staffing_table D, NIR N
                                                                                                                                where B.Posts_key = D.Posts_key and N.NIR_key = D.NIR_key and S.Staff_key  = D.Staff_key and B.Name_post IN('leader'))
                                                                                                       




---------10 Список женщин работающих над разработкой Диода шотки
select Second_name || '  ' || First_name  || '  ' || Middle_name "ФИО"
from Staff S
where exists (select *
               from NIR B, Staffing_table N
               where S.Staff_key = N.Staff_key and B.NIR_key = N.NIR_key and sex='W' and Development = 'Diod shotki')







---------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
---------1	горизонтальное обновляемое представление--------------------------------------
--select *
--from average_salary

--create or replace view average_salary AS
                              --select B.Name_department "Отдел", Sum(S.Salary) "Итого"
                              --From Posts S, Departments B, Staffing_table D, NIR N
                              --where B.Department_key = N.Department_key and N.NIR_key = D.NIR_key and S.Posts_key = D.Posts_key
                             -- group by B.Name_department



Select * 
from Name_persons

create or replace view Name_persons as 
                                   select *
                                   from Staff
                                   where sex='W'
                                   WITH CHECK OPTION 

update Name_persons
set Second_name = 'Krinkovvvva'
where Telephone_number = '+375(29)332-88-64'

-----------------	вертикальное  необновляемое представление

select *
from staff_in_NIR

create or replace view staff_in_NIR as 
                                    select B.Second_name || '  ' || B.First_name  || '  ' || B.Middle_name "ФИО", N.Development "Разработка", S.Name_post "Должность", D.Beginning_date "Дата начала работ", D.Term_of_work "Срок работ (дней)", P.Name_department "Отдел"
                                    From Posts S, Staff B, Staffing_table D, NIR N, Departments P
                                    where S.Posts_key = D.Posts_key and B.Staff_key = D.Staff_key and P.Department_key = N.Department_key and N.NIR_key = D.NIR_key 
                                    with read only


---- обновляемое представление для работы с таблицой сотрудники и через него разрешить работу с данными только в рабочие дни (с понедельника по пятницу) и в рабочие часы (с 9:00 до 17:00).
select *
from Name_of_staff


create or replace view Name_of_staff as 
                                     select *
                                     From Staff
                                     where to_char(Birth_date, 'yyyy') > 1992 and to_char(sysdate, 'dy') in('mon', 'tue', 'wed', 'thu', 'fri') and to_char(sysdate, 'hh24') between 6 and 14
                                     with check option

update Name_of_staff
set First_name = 'Vladdd'
where Telephone_number = '+375(29)279-94-27'



----44444444444444444444444444444444444444444444444444444444444444444444-------------
---Вариант 19. Создать процедуру, «переводящую» сотрудников задан-ного отдела в другие отделы этого же города. В каждый из отделов перево-дить приблизительно одинаковое по отношению к среднему значению коли-чество сотрудников. Расформированный отдел удалить.
--Написать функцию, подсчитывающую количество сотрудников, рабо-тающих в заданном отделе.


CREATE OR REPLACE PROCEDURE Staff_transfer
is 

Flag boolean;
Name_Dep varchar2(100);

cursor code_NIR_cur
is 
select Department_key, Development
from NIR;


cursor code_DEP_cur
is 
select Department_key
from Departments; 


BEGIN

for Dep_cycle in code_DEP_cur
loop
Flag := false;
        for NIR_cycle in code_NIR_cur
            loop

            if Dep_cycle.Department_key = NIR_cycle.Department_key then  
            DBMS_OUTPUT.PUT_LINE ('Есть такой отдел: ' || NIR_cycle.Development);
            Flag := true;
            end if;

            end loop;
            
            if Flag = true then
            Flag := false;
            else
            select Name_department into Name_Dep 
            from Departments
            where Department_key = Dep_cycle.Department_key;
            DBMS_OUTPUT.PUT_LINE ('Нет такого отдела: ' || Name_Dep);
            end if;

end loop;

END;
/

BEGIN
staff_transfer;
end;
/


----------\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
CREATE OR REPLACE PROCEDURE Staff_transfer (not_valid_Name_department in varchar2)
is 

new_Dep_key number;

Var1 number;
Var2 varchar2(500);
Num_per varchar2(100);
Head_dep varchar2(100);

cursor code_NIR_cur 
is 
select Department_key 
from NIR; 


BEGIN 

select Department_key into new_Dep_key
from Departments
where Name_department = not_valid_Name_department;

select Name_department into Var2 
from Departments 
where Department_key = new_Dep_key;

open code_NIR_cur;
fetch code_NIR_cur into Var1;



if Var1 <> new_Dep_key then 

DBMS_OUTPUT.PUT_LINE ('Отдел ' || Var2 || ' был заменен и удален');

            select Number_persons into Num_per
            from Departments 
            where Name_department = not_valid_name_department;

            select Head_department into Head_dep
            from Departments 
            where Name_department = not_valid_name_department;


insert into Departments values (1000, 'variable', Num_per, Head_dep);
update NIR set Department_key = 1000 where Department_key = new_Dep_key;
delete from Departments where Department_key = new_Dep_key;


close code_NIR_cur;

else 
delete from Departments where Department_key = new_Dep_key;
DBMS_OUTPUT.PUT_LINE ('Отдел ' || Var2 || ' был удален');

end if;

exception
when no_data_found then 
DBMS_OUTPUT.PUT_LINE ('Ошибка, данные не найдены');

END;
/

BEGIN
staff_transfer (not_valid_Name_department => 'Tranzistor');
end;
/

insert into Departments values('1', 'Tranzistor', '5', 'Sergeev');
insert into Departments values('6', 'Tiristor', '1', 'Ivanov');
delete from Departments where Department_key = 7



--444444 с пакетом все
create or replace package Sergeev_lab
is

var varchar2(100);
PROCEDURE Staff_transfer (not_valid_Name_department in varchar2);
function get_count_emp return varchar2;
end Sergeev_lab;

create or replace package body Sergeev_lab
is

PROCEDURE Staff_transfer (not_valid_Name_department in varchar2)
is 

new_Dep_key number;
Flag boolean;
new_NIR_key number;
Name_dep varchar2(500);
Num_per varchar2(100);
Head_dep varchar2(100);

cursor code_NIR_cur 
is 
select Department_key 
from NIR; 

BEGIN 

select Department_key into new_Dep_key
from Departments
where Name_department = not_valid_Name_department;

select Name_department into Name_dep 
from Departments 
where Department_key = new_Dep_key;

for cycle_dep in code_NIR_cur
loop

if new_Dep_key = cycle_dep.Department_key then 

Flag := true;
exit;

else 

Flag := false;

end if;
end loop;

if Flag = true then

DBMS_OUTPUT.PUT_LINE ('Отдел ' || Name_dep || ' был заменен и удален');

            select Number_persons into Num_per
            from Departments 
            where Name_department = not_valid_name_department;

            select Head_department into Head_dep
            from Departments 
            where Name_department = not_valid_name_department;

insert into Departments values (1000, 'variable', Num_per, Head_dep);
update NIR set Department_key = 1000 where Department_key = new_Dep_key;
delete from Departments where Department_key = new_Dep_key;

else

DBMS_OUTPUT.PUT_LINE ('Отдел ' || Name_dep || ' был удален');
delete from Departments where Department_key = new_Dep_key;

end if;

exception
when no_data_found then 
DBMS_OUTPUT.PUT_LINE ('Ошибка, данные не найдены');

END;

--Написать функцию, подсчитывающую количество сотрудников, работающих в заданном отделе.

function get_count_emp
return varchar2
is 

counter number;
var1 varchar2(100);

cursor Staff_key_cur 
is 
select Count(s.Staff_key) as counter, m.NAME_DEPARTMENT as name1
from Staffing_table s, Departments m, NIR n
where n.DEPARTMENT_KEY = m.DEPARTMENT_KEY and n.NIR_KEY = s.NIR_KEY
group by m.NAME_DEPARTMENT;

counter_staff number;
today date := sysdate;

procedure proc1 (value in date)
is

var1 varchar2(50) := to_char(value ,'dd/mm/yy');

BEGIN

DBMS_OUTPUT.PUT_LINE ('Сегодня: ' || var1);

end proc1;

procedure proc1 (value in number)
is

var1 varchar2(50) := to_char(value ,'9');

BEGIN

select count(Staff_key) into var1
from Staff;

DBMS_OUTPUT.PUT_LINE ('Всего в НИИ работают: ' || var1 || ' человек');

end proc1;

BEGIN

proc1 (today);
proc1 (counter_staff);

for cur_cycle in Staff_key_cur
loop

DBMS_OUTPUT.PUT_LINE ('Кол-во людей в отделе ' || cur_cycle.name1 || ' - ' || cur_cycle.counter);

end loop;
return (counter);

end;

END;
/






begin

Sergeev_lab.Staff_transfer (not_valid_Name_department => 'Tranzistor');
Sergeev_lab.Staff_transfer (not_valid_Name_department => 'Tiristor');
Sergeev_lab.Staff_transfer (not_valid_Name_department => 's');
DBMS_OUTPUT.PUT_LINE (' ');
Sergeev_lab.var := Sergeev_lab.get_count_emp;

end;
/